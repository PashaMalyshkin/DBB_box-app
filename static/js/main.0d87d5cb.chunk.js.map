{"version":3,"sources":["types/FileErrorMessages.ts","components/PageList/PageList.tsx","providers/DropboxContext.tsx","components/CreateFolderModal/CreateFolderModal.tsx","components/FolderIcon/FolderIcon.tsx","components/Loader/Loader.tsx","utils/formatDate.ts","components/Uploader/Uploader.tsx","components/FilesTable/FilesTable.tsx","utils/parseThumbnail.ts","components/FolderBreadcrumbs/FolderBreadcrumbs.tsx","components/ErrorAlert/ErrorAlert.tsx","components/Toolbar/Toolbar.tsx","pages/HomePage/HomePage.tsx","App.tsx","providers/Provider.tsx","index.tsx"],"names":["FileErrorMessages","drawerWidth","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","DrawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","PageList","useTheme","React","setOpen","Box","sx","CssBaseline","position","IconButton","color","aria-label","onClick","edge","mr","Typography","variant","noWrap","component","to","style","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","map","text","ListItem","disablePadding","ListItemButton","ListItemText","primary","DropboxContext","createContext","dropbox","Dropbox","isModalActive","errorMessage","isError","files","setFiles","setIsModalActive","setIsError","setErrorMessage","uploadFile","DropboxContextProvider","children","useState","pathname","useLocation","accessToken","process","event","a","file","target","filePath","name","filesUpload","path","contents","autorename","UPLOAD_FILE","window","location","reload","contextValue","Provider","value","useDropbox","context","useContext","Error","top","left","transform","minWidth","maxWidth","bgcolor","border","boxShadow","p","CreateFolderModal","folderName","setFolderName","handleSubmit","preventDefault","folderPath","filesCreateFolderV2","CREATE_FOLDER","Modal","className","aria-labelledby","aria-describedby","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","marginBottom","onSubmit","TextField","id","label","onChange","e","Button","type","disabled","length","FolderIcon","xmlns","height","viewBox","d","Loader","CircularProgress","formatDate","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","formattedTime","toString","padStart","amOrPm","Uploader","htmlFor","size","FilesTable","filesToShow","isLoading","filesToDelete","onDelete","checkIsFolder","fileTag","navigate","useNavigate","useEffect","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Checkbox","includes","filteredFiles","filter","handleDeleteFiles","path_display","inputProps","thumbnail","src","alt","handleChangePath","path_lower","client_modified","FolderBreadcrumbs","breadcrumbs","setBreadcrumbs","pathnameToBreadcrumbs","split","breadcrumb","getActiveBreadcrumb","index","breadcrumbActiveStyles","pointerEvents","role","Breadcrumbs","indexToSlice","findIndex","updatedPath","slice","join","handleClick","ErrorAlert","Snackbar","autoHideDuration","Alert","severity","Toolbar","hasFilesToDelete","fontSize","startIcon","HomePage","setFilesToDelete","setIsLoading","loadFiles","filesListFolder","dropboxResponse","filesList","result","entries","paths","format","filesGetThumbnailBatch","forEach","indexToUpdate","currentFile","metadata","LOAD_FILES","deleteFiles","Promise","all","filesDeleteV2","DELETE_FILES","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d87d5cb.chunk.js","sourcesContent":["export enum FileErrorMessages {\n  LOAD_FILES = 'Unable to load Files',\n  DELETE_FILES = 'Unable to delete Files',\n  CREATE_FOLDER = 'Unable to create Folder',\n  UPLOAD_FILE = 'Unable to upload File',\n}\n","import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Link } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nexport const PageList = () => {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            <Link\n              to=\"/\"\n              style={{ color: '#fff' }}\n            >\n              Dropbox\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {['Home', 'Photos', 'Deleted Files'].map((text) => (\n            <ListItem key={text} disablePadding>\n              <ListItemButton>\n                <ListItemText primary={text} />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n    </Box>\n  );\n};\n","import {\n  ChangeEvent,\n  createContext,\n  FC,\n  useContext,\n  useState,\n} from 'react';\nimport * as React from 'react';\n\nimport { Dropbox } from 'dropbox';\nimport { useLocation } from 'react-router-dom';\nimport { File } from '../types/File';\nimport { FileErrorMessages } from '../types/FileErrorMessages';\n// import DeleteResult = files.DeleteResult;\n\ninterface DropboxContextValue {\n  dropbox: Dropbox;\n  isModalActive: boolean;\n  errorMessage: string;\n  isError: boolean;\n  files: File[];\n  setIsModalActive: (modalStatus: boolean) => void;\n  setErrorMessage: (errorMessage: string) => void;\n  setIsError: (errorStatus: boolean) => void;\n  setFiles: (files: File[]) => void;\n  uploadFile: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const DropboxContext = createContext<DropboxContextValue>({\n  dropbox: new Dropbox(),\n  isModalActive: false,\n  errorMessage: '',\n  isError: false,\n  files: [],\n  setFiles: () => {},\n  setIsModalActive: () => {},\n  setIsError: () => {},\n  setErrorMessage: () => {},\n  uploadFile: () => {},\n});\n\nexport const DropboxContextProvider: FC = ({ children }) => {\n  const [isModalActive, setIsModalActive] = React.useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [files, setFiles] = useState<File[]>([]);\n\n  const { pathname } = useLocation();\n\n  const token = process.env.REACT_APP_ACCESS_TOKEN;\n\n  const dropbox = new Dropbox({\n    accessToken: token,\n  });\n\n  const uploadFile = async (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n\n    if (!file) {\n      return;\n    }\n\n    const filePath = pathname === '/'\n      ? `${pathname}${file.name}`\n      : `${pathname}/${file.name}`;\n\n    try {\n      await dropbox.filesUpload({\n        path: filePath,\n        contents: file,\n        autorename: true,\n      });\n    } catch {\n      setErrorMessage(FileErrorMessages.UPLOAD_FILE);\n      setIsError(true);\n    }\n\n    window.location.reload();\n  };\n\n  const contextValue: DropboxContextValue = {\n    dropbox,\n    errorMessage,\n    isError,\n    isModalActive,\n    files,\n    setFiles,\n    setErrorMessage,\n    setIsError,\n    setIsModalActive,\n    uploadFile,\n  };\n\n  return (\n    <DropboxContext.Provider value={contextValue}>\n      {children}\n    </DropboxContext.Provider>\n  );\n};\n\nexport const useDropbox = () => {\n  const context = useContext(DropboxContext);\n\n  if (!context) {\n    throw new Error(\n      'useDropbox must be used within a DropboxContextValue',\n    );\n  }\n\n  return context;\n};\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { Button, TextField } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { FormEvent, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDropbox } from '../../providers/DropboxContext';\nimport { FileErrorMessages } from '../../types/FileErrorMessages';\n\nconst style = {\n  position: 'absolute' as const,\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  minWidth: 300,\n  maxWidth: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const CreateFolderModal = () => {\n  const [folderName, setFolderName] = useState('');\n  const {\n    isModalActive,\n    setIsModalActive,\n    setErrorMessage,\n    setIsError,\n    dropbox,\n  } = useDropbox();\n  const { pathname } = useLocation();\n\n  const handleClose = () => setIsModalActive(false);\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const folderPath = pathname === '/'\n      ? `${pathname}${folderName}`\n      : `${pathname}/${folderName}`;\n\n    try {\n      await dropbox.filesCreateFolderV2({\n        path: folderPath,\n        autorename: true,\n      });\n    } catch {\n      setErrorMessage(FileErrorMessages.CREATE_FOLDER);\n      setIsError(true);\n    }\n\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Modal\n        className=\"modal\"\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={isModalActive}\n        onClose={handleClose}\n        closeAfterTransition\n        slots={{ backdrop: Backdrop }}\n        slotProps={{\n          backdrop: {\n            timeout: 500,\n          },\n        }}\n      >\n        <Fade in={isModalActive}>\n          <Box sx={style}>\n            <Typography sx={{ marginBottom: '16px ' }}>Create Folder</Typography>\n            <form\n              className=\"modal__form\"\n              onSubmit={handleSubmit}\n            >\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Folder Name\"\n                variant=\"outlined\"\n                value={folderName}\n                onChange={(e) => setFolderName(e.target.value)}\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                className=\"modal__button\"\n                disabled={folderName.length === 0}\n              >\n                Create\n              </Button>\n            </form>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const FolderIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"32\"\n    viewBox=\"0 -960 960 960\"\n    width=\"32\"\n  >\n    <path\n      d=\"M140-160q-24 0-42-18.5T80-220v-520q0-23 18-41.5t42-18.5h281l60 60h339q23 0 41.5 18.5T880-680v460q0 23-18.5 41.5T820-160H140Zm0-60h680v-460H456l-60-60H140v520Zm0 0v-520 520Z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Box sx={{ display: 'flex' }}>\n        <CircularProgress />\n      </Box>\n    </div>\n  );\n};\n","export const formatDate = (date = new Date()) => {\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  const formattedDate = `${day}/${month}/${year}`;\n\n  let formattedTime = `${hours}:${minutes.toString().padStart(2, '0')}`;\n\n  const amOrPm = hours >= 12 ? 'pm' : 'am';\n\n  formattedTime += ` ${amOrPm}`;\n\n  return `${formattedDate} ${formattedTime}`;\n};\n","import React from 'react';\nimport { BsCloudUpload } from 'react-icons/bs';\nimport { useDropbox } from '../../providers/DropboxContext';\n\nexport const Uploader = () => {\n  const { uploadFile } = useDropbox();\n\n  return (\n    <div className=\"uploader\">\n      <form\n        className=\"uploader__form\"\n      >\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n        <label\n          htmlFor=\"uploader\"\n          className=\"uploader__label\"\n        >\n          <BsCloudUpload color=\"#1475cf\" size={60} />\n        </label>\n        <input\n          id=\"uploader\"\n          name=\"uploader\"\n          type=\"file\"\n          onChange={uploadFile}\n          className=\"uploader__input\"\n        />\n      </form>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport { Checkbox } from '@mui/material';\nimport { FolderIcon } from '../FolderIcon';\nimport { Loader } from '../Loader';\n\nimport { File } from '../../types/File';\nimport { formatDate } from '../../utils/formatDate';\nimport { parseThumbnail } from '../../utils/parseThumbnail';\nimport { Uploader } from '../Uploader';\n\ninterface Props {\n  filesToShow: File[];\n  filesToDelete: string[],\n  onDelete: (paths: string[]) => void;\n  isLoading: boolean;\n}\n\nexport const FilesTable: FC<Props> = ({\n  filesToShow,\n  isLoading,\n  filesToDelete,\n  onDelete,\n}) => {\n  const checkIsFolder = (fileTag: string) => fileTag === 'folder';\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const handleChangePath = (fileTag: string, path = '') => {\n    if (checkIsFolder(fileTag)) {\n      navigate(path);\n    }\n  };\n\n  const handleDeleteFiles = (path: string) => {\n    if (filesToDelete.includes(path)) {\n      const filteredFiles = filesToDelete.filter(filePath => filePath !== path);\n\n      onDelete(filteredFiles);\n    } else {\n      onDelete([...filesToDelete, path]);\n    }\n  };\n\n  useEffect(() => {\n    onDelete([]);\n  }, [pathname]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {filesToShow.length ? (\n            <TableContainer component={Paper}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"caption table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Files</TableCell>\n                    <TableCell align=\"right\">Modified</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filesToShow.map(file => (\n                    <TableRow key={file.id}>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <div className=\"files-table__cell-content\">\n                          <Checkbox\n                            onChange={() => handleDeleteFiles(file.path_display)}\n                            inputProps={{ 'aria-label': 'controlled' }}\n                          />\n                          <div className=\"files-table__cell-image\">\n                            {!file.thumbnail ? (\n                              <FolderIcon />\n                            ) : (\n                              <img src={parseThumbnail(file.thumbnail)} alt={file.name} />\n                            )}\n                          </div>\n\n                          <button\n                            className=\"files-table__button\"\n                            type=\"button\"\n                            onClick={() => handleChangePath(file['.tag'], file.path_lower)}\n                          >\n                            {file.name}\n                          </button>\n                        </div>\n                      </TableCell>\n\n                      <TableCell align=\"right\">\n                        {file.client_modified && (\n                          formatDate(new Date(file.client_modified))\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          ) : (\n            <Uploader />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","export const parseThumbnail = (thumbnail: string) => {\n  return `data:image/jpeg;base64, ${thumbnail}`;\n};\n","import * as React from 'react';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport { CSSProperties, useEffect, useState } from 'react';\n\nexport const FolderBreadcrumbs = () => {\n  const [breadcrumbs, setBreadcrumbs] = useState<string[]>([]);\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const pathnameToBreadcrumbs = pathname\n      .split('/')\n      .filter(breadcrumb => breadcrumb);\n\n    setBreadcrumbs(pathnameToBreadcrumbs);\n  }, [pathname]);\n\n  const getActiveBreadcrumb = (index = -1) => {\n    const breadcrumbActiveStyles = {\n      color: '#736c64',\n      pointerEvents: 'auto',\n    } as CSSProperties;\n\n    if (index === breadcrumbs.length - 1 || pathname === '/') {\n      breadcrumbActiveStyles.color = '#000';\n      breadcrumbActiveStyles.pointerEvents = 'none';\n    }\n\n    return breadcrumbActiveStyles;\n  };\n\n  const handleClick = (path: string) => {\n    const indexToSlice = breadcrumbs.findIndex(breadcrumb => (\n      breadcrumb === path\n    ));\n\n    const updatedPath = breadcrumbs\n      .slice(0, indexToSlice + 1)\n      .join('/');\n\n    navigate(updatedPath);\n  };\n\n  return (\n    <div\n      role=\"presentation\"\n      className=\"breadcrumbs\"\n    >\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link\n          to=\"/\"\n          style={getActiveBreadcrumb()}\n        >\n          Dropbox\n        </Link>\n\n        {breadcrumbs.map((path, index) => (\n          <button\n            key={path}\n            type=\"button\"\n            className=\"breadcrumbs__button\"\n            onClick={() => handleClick(path)}\n            style={getActiveBreadcrumb(index)}\n          >\n            {path}\n          </button>\n        ))}\n      </Breadcrumbs>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport { FC } from 'react';\nimport { Snackbar } from '@mui/material';\nimport { useDropbox } from '../../providers/DropboxContext';\n\nexport const ErrorAlert: FC = () => {\n  const { isError, setIsError, errorMessage } = useDropbox();\n  const handleClose = () => setIsError(false);\n\n  return (\n    <Snackbar\n      open={isError}\n      onClose={handleClose}\n      autoHideDuration={6000}\n    >\n      <Alert severity=\"error\">{errorMessage}</Alert>\n    </Snackbar>\n  );\n};\n","import React, { FC } from 'react';\nimport { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { BsFolderPlus } from 'react-icons/bs';\nimport Typography from '@mui/material/Typography';\nimport { useDropbox } from '../../providers/DropboxContext';\n\ninterface Props {\n  onDelete: () => void;\n  hasFilesToDelete: boolean;\n}\n\nexport const Toolbar: FC<Props> = ({\n  onDelete,\n  hasFilesToDelete,\n}) => {\n  const { setIsModalActive, uploadFile } = useDropbox();\n  const handleOpen = () => setIsModalActive(true);\n\n  return (\n    <div className=\"toolbar\">\n      <Button\n        variant=\"contained\"\n        onClick={onDelete}\n      >\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n        <label\n          htmlFor=\"file\"\n          className=\"toolbar__label\"\n        >\n          Upload\n        </label>\n        <input\n          id=\"file\"\n          className=\"toolbar__input-file\"\n          type=\"file\"\n          onChange={uploadFile}\n        />\n\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleOpen}\n      >\n        <BsFolderPlus size={20} />\n        <Typography sx={{ fontSize: '0.875rem', marginLeft: '10px' }}>\n          Create Folder\n        </Typography>\n      </Button>\n\n      {hasFilesToDelete && (\n        <Button\n          variant=\"outlined\"\n          onClick={onDelete}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React, {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useLocation } from 'react-router-dom';\nimport { FilesTable } from '../../components/FilesTable';\nimport { FolderBreadcrumbs } from '../../components/FolderBreadcrumbs';\n\nimport { FileErrorMessages } from '../../types/FileErrorMessages';\nimport { File } from '../../types/File';\nimport { ErrorAlert } from '../../components/ErrorAlert';\nimport { Toolbar } from '../../components/Toolbar';\n// eslint-disable-next-line import/no-unresolved,import/extensions\nimport { Thumbnail } from '../../file.js';\nimport { useDropbox } from '../../providers/DropboxContext';\n\nexport const HomePage:FC = () => {\n  const [filesToDelete, setFilesToDelete] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { pathname = '' } = useLocation();\n  const hasFilesToDelete = filesToDelete.length > 0;\n\n  const {\n    setIsError,\n    setErrorMessage,\n    dropbox,\n    files,\n    setFiles,\n    // setDeletedFiles,\n  } = useDropbox();\n\n  const getPath = () => {\n    return pathname === '/' ? '' : pathname;\n  };\n\n  const loadFiles = async () => {\n    try {\n      setIsLoading(true);\n      const dropboxResponse = await dropbox.filesListFolder({ path: getPath() });\n      const filesList = dropboxResponse.result.entries as File[];\n      const paths: Thumbnail[] = filesList.filter(file => file['.tag'] === 'file')\n        .map(file => ({\n          path: file.path_lower,\n          format: 'jpeg',\n          size: 'w32h32',\n        }));\n\n      const thumbnails = await dropbox.filesGetThumbnailBatch({\n        entries: paths,\n      });\n\n      thumbnails.result.entries.forEach(file => {\n        if ('metadata' in file) {\n          const indexToUpdate = filesList.findIndex(currentFile => (\n            file.metadata.path_lower === currentFile.path_lower\n          ));\n\n          filesList[indexToUpdate] = {\n            ...filesList[indexToUpdate],\n            thumbnail: file.thumbnail,\n          };\n        }\n      });\n\n      setFiles(filesList);\n    } catch {\n      setErrorMessage(FileErrorMessages.LOAD_FILES);\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const deleteFiles = async () => {\n    try {\n      await Promise.all(filesToDelete.map(path => (\n        dropbox.filesDeleteV2({ path })\n      )));\n    } catch {\n      setErrorMessage(FileErrorMessages.DELETE_FILES);\n      setIsError(true);\n    }\n\n    setFilesToDelete([]);\n    loadFiles();\n  };\n\n  useEffect(() => {\n    loadFiles();\n  }, [pathname]);\n\n  return (\n    <>\n      <FolderBreadcrumbs />\n\n      <Toolbar\n        hasFilesToDelete={hasFilesToDelete}\n        onDelete={deleteFiles}\n      />\n\n      <FilesTable\n        filesToShow={files}\n        filesToDelete={filesToDelete}\n        onDelete={setFilesToDelete}\n        isLoading={isLoading}\n      />\n\n      <ErrorAlert />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { PageList } from './components/PageList';\nimport { CreateFolderModal } from './components/CreateFolderModal';\nimport { HomePage } from './pages/HomePage';\n\nexport const App: FC = () => {\n  return (\n    <>\n      <PageList />\n\n      <div className=\"container\">\n        <HomePage />\n\n        <CreateFolderModal />\n      </div>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { DropboxContextProvider } from './DropboxContext';\n\nexport const Provider: FC = ({ children }) => {\n  return (\n    <DropboxContextProvider>\n      {children}\n    </DropboxContextProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './styles/index.scss';\nimport { App } from './App';\nimport { Provider } from './providers/Provider';\n\nReactDOM.render(\n  <Router>\n    <Provider>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}