{"version":3,"sources":["types/FileErrorMessages.ts","components/PageList/PageList.tsx","providers/DropboxContext.tsx","utils/createDropbox.ts","components/CreateFolderModal/CreateFolderModal.tsx","components/FolderIcon/FolderIcon.tsx","components/Loader/Loader.tsx","utils/formatDate.ts","components/FilesTable/FilesTable.tsx","components/FolderBreadcrumbs/FolderBreadcrumbs.tsx","components/ErrorAlert/ErrorAlert.tsx","components/Toolbar/Toolbar.tsx","pages/HomePage/HomePage.tsx","pages/PhotosPage/PhotosPage.tsx","App.tsx","providers/Provider.tsx","index.tsx"],"names":["FileErrorMessages","drawerWidth","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","DrawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","PageList","useTheme","React","setOpen","Box","sx","CssBaseline","position","IconButton","color","aria-label","onClick","edge","mr","Typography","variant","noWrap","component","Drawer","flexShrink","boxSizing","anchor","direction","Divider","List","map","text","ListItem","disablePadding","ListItemButton","ListItemText","primary","DropboxContext","createContext","isModalActive","setIsModalActive","DropboxContextProvider","children","contextValue","Provider","value","useDropbox","context","useContext","Error","dropbox","Dropbox","accessToken","process","style","top","left","transform","minWidth","maxWidth","bgcolor","border","boxShadow","p","CreateFolderModal","useState","folderName","setFolderName","pathname","useLocation","handleSubmit","a","folderPath","filesCreateFolderV2","path","autorename","window","location","reload","Modal","className","aria-labelledby","aria-describedby","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","marginBottom","onSubmit","TextField","id","label","onChange","e","target","Button","type","FolderIcon","xmlns","height","viewBox","d","Loader","CircularProgress","formatDate","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","formattedTime","toString","padStart","amOrPm","FilesTable","filesToShow","isLoading","filesToDelete","onDelete","checkIsFolder","fileTag","navigate","useNavigate","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","file","scope","Checkbox","includes","filteredFiles","filter","filePath","handleDeleteFiles","path_display","inputProps","thumbnail","src","alt","name","handleChangePath","path_lower","client_modified","FolderBreadcrumbs","breadcrumbs","setBreadcrumbs","useEffect","pathnameToBreadcrumbs","split","breadcrumb","getActiveBreadcrumb","index","breadcrumbActiveStyles","pointerEvents","length","role","Breadcrumbs","Link","href","underline","indexToSlice","findIndex","updatedPath","slice","join","handleClick","ErrorAlert","isOpen","handleClose","Snackbar","autoHideDuration","Alert","severity","Toolbar","hasFilesToDelete","onAdd","htmlFor","startIcon","HomePage","files","setFiles","setFilesToDelete","setIsLoading","errorMessage","setErrorMessage","isError","setIsError","loadFiles","filesListFolder","dropboxResponse","filesList","result","entries","paths","format","size","filesGetThumbnailBatch","forEach","indexToUpdate","currentFile","metadata","LOAD_FILES","deleteFiles","Promise","all","filesDeleteV2","DELETE_FILES","uploadFile","event","filesUpload","contents","PhotosPage","App","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d27769a.chunk.js","sourcesContent":["export enum FileErrorMessages {\n  LOAD_FILES = 'Unable to load Files',\n  DELETE_FILES = 'Unable to delete Files',\n}\n","import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n\nconst drawerWidth = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nexport const PageList = () => {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Dropbox\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {['Home', 'Photos', 'Deleted Files'].map((text) => (\n            <ListItem key={text} disablePadding>\n              <ListItemButton>\n                <ListItemText primary={text} />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n    </Box>\n  );\n};\n","import { createContext, FC, useContext } from 'react';\nimport * as React from 'react';\n\ninterface DropboxContextValue {\n  isModalActive: boolean,\n  setIsModalActive: (value: boolean) => void;\n}\n\nexport const DropboxContext = createContext<DropboxContextValue>({\n  isModalActive: false,\n  setIsModalActive: () => {},\n});\n\nexport const DropboxContextProvider: FC = ({ children }) => {\n  const [isModalActive, setIsModalActive] = React.useState(false);\n\n  const contextValue: DropboxContextValue = {\n    isModalActive,\n    setIsModalActive,\n  };\n\n  return (\n    <DropboxContext.Provider value={contextValue}>\n      {children}\n    </DropboxContext.Provider>\n  );\n};\n\nexport const useDropbox = () => {\n  const context = useContext(DropboxContext);\n\n  if (!context) {\n    throw new Error(\n      'useDropbox must be used within a DropboxContextValue',\n    );\n  }\n\n  return context;\n};\n","import { Dropbox } from 'dropbox';\n\nconst token = process.env.REACT_APP_ACCESS_TOKEN;\n\nexport const dropbox = new Dropbox({\n  accessToken: token,\n});\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport { Button, TextField } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDropbox } from '../../providers/DropboxContext';\nimport { dropbox } from '../../utils/createDropbox';\n\nconst style = {\n  position: 'absolute' as const,\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  minWidth: 300,\n  maxWidth: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const CreateFolderModal = () => {\n  const [folderName, setFolderName] = useState('');\n  const { isModalActive, setIsModalActive } = useDropbox();\n  const { pathname } = useLocation();\n\n  const handleClose = () => setIsModalActive(false);\n\n  const handleSubmit = async () => {\n    const folderPath = pathname === '/'\n      ? `${pathname}${folderName}`\n      : `${pathname}/${folderName}`;\n\n    await dropbox.filesCreateFolderV2({\n      path: folderPath,\n      autorename: true,\n    });\n\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Modal\n        className=\"modal\"\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={isModalActive}\n        onClose={handleClose}\n        closeAfterTransition\n        slots={{ backdrop: Backdrop }}\n        slotProps={{\n          backdrop: {\n            timeout: 500,\n          },\n        }}\n      >\n        <Fade in={isModalActive}>\n          <Box sx={style}>\n            <Typography sx={{ marginBottom: '16px ' }}>Create Folder</Typography>\n            <form\n              className=\"modal__form\"\n              onSubmit={handleSubmit}\n            >\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Folder Name\"\n                variant=\"outlined\"\n                value={folderName}\n                onChange={(e) => setFolderName(e.target.value)}\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                className=\"modal__button\"\n              >\n                Create\n              </Button>\n            </form>\n          </Box>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const FolderIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"32\"\n    viewBox=\"0 -960 960 960\"\n    width=\"32\"\n  >\n    <path\n      d=\"M140-160q-24 0-42-18.5T80-220v-520q0-23 18-41.5t42-18.5h281l60 60h339q23 0 41.5 18.5T880-680v460q0 23-18.5 41.5T820-160H140Zm0-60h680v-460H456l-60-60H140v520Zm0 0v-520 520Z\"\n    />\n  </svg>\n);\n","import * as React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nexport const Loader = () => {\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CircularProgress />\n    </Box>\n  );\n};\n","export const formatDate = (date = new Date()) => {\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  const formattedDate = `${day}/${month}/${year}`;\n\n  let formattedTime = `${hours}:${minutes.toString().padStart(2, '0')}`;\n\n  const amOrPm = hours >= 12 ? 'pm' : 'am';\n\n  formattedTime += ` ${amOrPm}`;\n\n  return `${formattedDate} ${formattedTime}`;\n};\n","import React, { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport { Checkbox } from '@mui/material';\nimport { FolderIcon } from '../FolderIcon';\nimport { Loader } from '../Loader';\n\nimport { File } from '../../types/File';\nimport { formatDate } from '../../utils/formatDate';\n\ninterface Props {\n  filesToShow: File[];\n  filesToDelete: string[],\n  onDelete: (paths: string[]) => void;\n  isLoading: boolean;\n}\n\nexport const FilesTable: FC<Props> = ({\n  filesToShow,\n  isLoading,\n  filesToDelete,\n  onDelete,\n}) => {\n  const checkIsFolder = (fileTag: string) => fileTag === 'folder';\n  const navigate = useNavigate();\n\n  const handleChangePath = (fileTag: string, path = '') => {\n    if (checkIsFolder(fileTag)) {\n      navigate(path);\n    }\n  };\n\n  const handleDeleteFiles = (path: string) => {\n    if (filesToDelete.includes(path)) {\n      const filteredFiles = filesToDelete.filter(filePath => filePath !== path);\n\n      onDelete(filteredFiles);\n    } else {\n      onDelete([...filesToDelete, path]);\n    }\n  };\n\n  const parseThumbnail = (thumbnail: string) => {\n    return `data:image/jpeg;base64, ${thumbnail}`;\n  };\n\n  return (\n    <div className=\"files-table\">\n      {!isLoading ? (\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"caption table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\">Files</TableCell>\n                <TableCell align=\"right\">Modified</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filesToShow.map(file => (\n                <TableRow key={file.id}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                  >\n                    <div className=\"files-table__cell-content\">\n                      <Checkbox\n                        onChange={() => handleDeleteFiles(file.path_display)}\n                        inputProps={{ 'aria-label': 'controlled' }}\n                      />\n                      <div className=\"files-table__cell-image\">\n                        {!file.thumbnail ? (\n                          <FolderIcon />\n                        ) : (\n                          <img src={parseThumbnail(file.thumbnail)} alt={file.name} />\n                        )}\n                      </div>\n\n                      <button\n                        className=\"files-table__button\"\n                        type=\"button\"\n                        onClick={() => handleChangePath(file['.tag'], file.path_lower)}\n                      >\n                        {file.name}\n                      </button>\n                    </div>\n                  </TableCell>\n\n                  <TableCell align=\"right\">\n                    {file.client_modified && (\n                      formatDate(new Date(file.client_modified))\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport Link from '@mui/material/Link';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { CSSProperties, useEffect, useState } from 'react';\n\nexport const FolderBreadcrumbs = () => {\n  const [breadcrumbs, setBreadcrumbs] = useState<string[]>([]);\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const pathnameToBreadcrumbs = pathname\n      .split('/')\n      .filter(breadcrumb => breadcrumb);\n\n    setBreadcrumbs(pathnameToBreadcrumbs);\n  }, [pathname]);\n\n  const getActiveBreadcrumb = (index = -1) => {\n    const breadcrumbActiveStyles = {\n      color: '#736c64',\n      pointerEvents: 'auto',\n    } as CSSProperties;\n\n    if (index === breadcrumbs.length - 1 || pathname === '/') {\n      breadcrumbActiveStyles.color = '#000';\n      breadcrumbActiveStyles.pointerEvents = 'none';\n    }\n\n    return breadcrumbActiveStyles;\n  };\n\n  const handleClick = (path: string) => {\n    const indexToSlice = breadcrumbs.findIndex(breadcrumb => (\n      breadcrumb === path\n    ));\n\n    const updatedPath = breadcrumbs\n      .slice(0, indexToSlice + 1)\n      .join('/');\n\n    navigate(updatedPath);\n  };\n\n  return (\n    <div\n      role=\"presentation\"\n      className=\"breadcrumbs\"\n    >\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link\n          href=\"/\"\n          underline=\"none\"\n          color=\"inherit\"\n          style={getActiveBreadcrumb()}\n        >\n          Dropbox\n        </Link>\n\n        {breadcrumbs.map((path, index) => (\n          <button\n            key={path}\n            type=\"button\"\n            className=\"breadcrumbs__button\"\n            onClick={() => handleClick(path)}\n            style={getActiveBreadcrumb(index)}\n          >\n            {path}\n          </button>\n        ))}\n      </Breadcrumbs>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport { FC } from 'react';\nimport { Snackbar } from '@mui/material';\n\ninterface Props {\n  text: string;\n  isOpen: boolean,\n  handleClose: () => void;\n}\n\nexport const ErrorAlert: FC<Props> = ({\n  text,\n  isOpen,\n  handleClose,\n}) => {\n  return (\n    <Snackbar\n      open={isOpen}\n      onClose={handleClose}\n      autoHideDuration={6000}\n    >\n      <Alert severity=\"error\">{text}</Alert>\n    </Snackbar>\n  );\n};\n","import React, { ChangeEvent, FC } from 'react';\nimport { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDropbox } from '../../providers/DropboxContext';\n\ninterface Props {\n  onDelete: () => void;\n  hasFilesToDelete: boolean;\n  onAdd: (event: ChangeEvent<HTMLInputElement>) => Promise<void>;\n}\n\nexport const Toolbar: FC<Props> = ({\n  onDelete,\n  hasFilesToDelete,\n  onAdd,\n}) => {\n  const { setIsModalActive } = useDropbox();\n  const handleOpen = () => setIsModalActive(true);\n\n  return (\n    <div className=\"toolbar\">\n      <Button\n        variant=\"contained\"\n        onClick={onDelete}\n      >\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control,jsx-a11y/label-has-for */}\n        <label\n          htmlFor=\"file\"\n          className=\"toolbar__label\"\n        >\n          Upload\n        </label>\n        <input\n          id=\"file\"\n          className=\"toolbar__input-file\"\n          type=\"file\"\n          onChange={onAdd}\n        />\n\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        onClick={handleOpen}\n      >\n        Create Folder\n      </Button>\n\n      {hasFilesToDelete && (\n        <Button\n          variant=\"outlined\"\n          onClick={onDelete}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React, {\n  ChangeEvent,\n  FC,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { useLocation } from 'react-router-dom';\nimport { FilesTable } from '../../components/FilesTable';\nimport { FolderBreadcrumbs } from '../../components/FolderBreadcrumbs';\n\nimport { FileErrorMessages } from '../../types/FileErrorMessages';\nimport { File } from '../../types/File';\nimport { ErrorAlert } from '../../components/ErrorAlert';\nimport { Toolbar } from '../../components/Toolbar';\nimport { dropbox } from '../../utils/createDropbox';\n// eslint-disable-next-line import/no-unresolved,import/extensions\nimport { Thumbnail } from '../../file.js';\n\nexport const HomePage:FC = () => {\n  const [files, setFiles] = useState<File[]>([]);\n  const [filesToDelete, setFilesToDelete] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  const { pathname = '' } = useLocation();\n  const hasFilesToDelete = filesToDelete.length > 0;\n\n  const getPath = () => {\n    return pathname === '/' ? '' : pathname;\n  };\n\n  const loadFiles = async () => {\n    try {\n      setIsLoading(true);\n      const dropboxResponse = await dropbox.filesListFolder({ path: getPath() });\n      const filesList = dropboxResponse.result.entries as File[];\n      const paths: Thumbnail[] = filesList.filter(file => file['.tag'] === 'file')\n        .map(file => ({\n          path: file.path_lower,\n          format: 'jpeg',\n          size: 'w32h32',\n        }));\n\n      const thumbnails = await dropbox.filesGetThumbnailBatch({\n        entries: paths,\n      });\n\n      thumbnails.result.entries.forEach(file => {\n        if ('metadata' in file) {\n          const indexToUpdate = filesList.findIndex(currentFile => (\n            file.metadata.path_lower === currentFile.path_lower\n          ));\n\n          filesList[indexToUpdate] = {\n            ...filesList[indexToUpdate],\n            thumbnail: file.thumbnail,\n          };\n        }\n      });\n\n      setFiles(filesList);\n    } catch {\n      setErrorMessage(FileErrorMessages.LOAD_FILES);\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const deleteFiles = async () => {\n    try {\n      await Promise.all(filesToDelete.map(path => (\n        dropbox.filesDeleteV2({ path })\n      )));\n    } catch {\n      setErrorMessage(FileErrorMessages.DELETE_FILES);\n      setIsError(true);\n    }\n\n    loadFiles();\n  };\n\n  const uploadFile = async (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n\n    if (!file) {\n      return;\n    }\n\n    await dropbox.filesUpload({\n      path: `${pathname}/${file.name}`,\n      contents: file,\n      autorename: true,\n    });\n\n    loadFiles();\n  };\n\n  useEffect(() => {\n    loadFiles();\n  }, [pathname]);\n\n  return (\n    <>\n      <FolderBreadcrumbs />\n\n      <Toolbar\n        hasFilesToDelete={hasFilesToDelete}\n        onDelete={deleteFiles}\n        onAdd={uploadFile}\n      />\n\n      <FilesTable\n        filesToShow={files}\n        filesToDelete={filesToDelete}\n        onDelete={setFilesToDelete}\n        isLoading={isLoading}\n      />\n\n      <ErrorAlert\n        isOpen={isError}\n        handleClose={() => setIsError(false)}\n        text={errorMessage}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PhotosPage = () => {\n  return (\n    <></>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { PageList } from './components/PageList';\nimport { CreateFolderModal } from './components/CreateFolderModal';\nimport { HomePage } from './pages/HomePage';\nimport { PhotosPage } from './pages/PhotosPage';\n\nexport const App: FC = () => {\n  return (\n    <>\n      <PageList />\n\n      <div className=\"container\">\n        <HomePage />\n        <Routes>\n          <Route path=\"/photos\" element={<PhotosPage />} />\n        </Routes>\n\n        <CreateFolderModal />\n      </div>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { DropboxContextProvider } from './DropboxContext';\n\nexport const Provider: FC = ({ children }) => {\n  return (\n    <DropboxContextProvider>\n      {children}\n    </DropboxContextProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './styles/index.scss';\nimport { App } from './App';\nimport { Provider } from './providers/Provider';\n\nReactDOM.render(\n  <Router>\n    <Provider>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}